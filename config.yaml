---
port: 7890
socks-port: 7891
redir-port: 7892
tproxy-port: 7895
mixed-port: 7893
allow-lan: true
mode: rule
log-level: info
ipv6: false
external-controller: 0.0.0.0:9090
external-ui: yacd-gh-pages
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  listen: 0.0.0.0:7894
  fallback-filter:
  geoip: true
  geoip-code: ID
  ipcidr:
  - 0.0.0.0/8
  - 10.0.0.0/8
  - 100.64.0.0/10
  - 127.0.0.0/8
  - 169.254.0.0/16
  - 172.16.0.0/12
  - 192.0.0.0/24
  - 192.0.2.0/24
  - 192.88.99.0/24
  - 192.168.0.0/16
  - 198.18.0.0/15
  - 198.51.100.0/24
  - 203.0.113.0/24
  - 224.0.0.0/4
  - 240.0.0.0/4
  - 255.255.255.255/32
  domain:
  - "+.google.com"
  - "+.facebook.com"
  - "+.youtube.com"
  - "+.githubusercontent.com"
  - "+.googlevideo.com"
  - "+.msftconnecttest.com"
  - "+.msftncsi.com"
  - msftconnecttest.com
  - msftncsi.com
  fake-ip-filter:
  - "+.pool.ntp.org"
  - ntp7.*.com
  - ntp6.*.com
  - ntp5.*.com
  - ntp4.*.com
  - ntp3.*.com
  - ntp2.*.com
  - ntp1.*.com
  - ntp.*.com
  - time7.*.com
  - time6.*.com
  - time5.*.com
  - time4.*.com
  - time3.*.com
  - time2.*.com
  - time1.*.com
  - time.*.apple.com
  - time.*.edu.cn
  - time.*.gov
  - time.*.com
  - "*.home.arpa"
  - "*.local"
  - "*.test"
  - "*.localhost"
  - "*.invalid"
  - "*.example"
  - "*.localdomain"
  - "+.stun.*.*.*.*.*"
  - "+.stun.*.*.*.*"
  - "+.stun.*.*.*"
  - "+.stun.*.*"
  - stun.*.*.*
  - stun.*.*
  - time1.cloud.tencent.com
  - "*.ntp.org.cn"
  - "*.time.edu.cn"
  - "*.lan"
  fake-ip-range: 198.18.0.1/16
  default-nameserver:
  - 8.8.8.8
  - 8.8.4.4
  nameserver:
  - 8.8.8.8
  - 8.8.4.4
  - https://dns.google/dns-query
  - tls://dns.google
proxy-providers:
  master-isp:
    type: file
    path: "./master-isp.yaml"
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
proxy-groups:
- name: SIMASTER-V1.3
  type: select
  disable-udp: false
  proxies:
  - LOADBALANCE
  - RELAY
  - MANUAL
  - AUTO
  - FAILOVER
  - DIRECT
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: PORT-UMUM
  type: select
  disable-udp: false
  proxies:
  - REJECT
  - DIRECT
  - SIMASTER-V1.3
- name: PORT-MOBILELEGENDS
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
- name: PORT-GARENA
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
- name: PORT-PUBG
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
- name: PORT-CALLOFDUTY
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
- name: LOADBALANCE
  type: load-balance
  strategy: round-robin
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: MANUAL
  type: select
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: AUTO
  type: url-test
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
  tolerance: '99'
- name: FAILOVER
  type: fallback
  disable-udp: false
  use:
  - master-isp
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: RELAY
  type: relay
  disable-udp: false
  use:
  - master-isp
- name: WHATSAPP
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: SOSMED
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: STREAM
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
- name: GAME
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  - SIMASTER-V1.3
- name: AMANKAN-ANAK
  type: select
  disable-udp: false
  proxies:
  - REJECT
rule-providers:
  Koneksi-Proxy:
    type: file
    behavior: classical
    path: "./koneksi-proxy.yaml"
  Bypass-Whatsapp:
    type: file
    behavior: domain
    path: "./bypass-whatsapp.yaml"
  Bypass-Sosmed:
    type: file
    behavior: classical
    path: "./bypass-sosmed.yaml"
  Bypass-Stream:
    type: file
    behavior: classical
    path: "./bypass-stream.yaml"
  Bypass-Game:
    type: file
    behavior: classical
    path: "./bypass-game.yaml"
  Safety-Child:
    type: file
    behavior: classical
    path: "./safety-child.yaml"
script:
  shortcuts:
    OBS-TCP2396: network == 'tcp' and dst_port == 2396
    OBS-TCP2935: network == 'tcp' and dst_port == 2935
    OBS-TCP1935: network == 'tcp' and dst_port == 1935
    OBS-TCP1936: network == 'tcp' and dst_port == 1936
    WA-PORT: network == 'tcp' and dst_port == 5222
    TCP-5228: network == 'tcp' and dst_port == 5228
    TCP-8888: network == 'tcp' and dst_port == 8888
    UDP-21: network == 'udp' and dst_port == 21
    UDP-22: network == 'udp' and dst_port == 22
    UDP-23: network == 'udp' and dst_port == 23
    UDP-53: network == 'udp' and dst_port == 53
    UDP-80: network == 'udp' and dst_port == 80
    UDP-123: network == 'udp' and dst_port == 123
    UDP-443: network == 'udp' and dst_port == 443
    UDP-1443: network == 'udp' and dst_port == 1443
    UDP-5353: network == 'udp' and dst_port == 5353
    UDP-8080: network == 'udp' and dst_port == 8080
    UDP-8081: network == 'udp' and dst_port == 8081
    UDP-8888: network == 'udp' and dst_port == 8888
    FF-TCP1: network == 'tcp' and dst_port == 39003
    FF-TCP2: network == 'tcp' and dst_port == 39698
    FF-TCP3: network == 'tcp' and dst_port == 10001
    FF-UDP1: network == 'udp' and dst_port == 10001
    FF-UDP2: network == 'udp' and dst_port == 10003
    FF-UDP3: network == 'udp' and dst_port == 10012
    ML-TCP1: network == 'tcp' and dst_port == 5001
    ML-TCP2: network == 'tcp' and dst_port == 5003
    ML-TCP3: network == 'tcp' and dst_port == 9001
    PUBG-TCP1: network == 'tcp' and dst_port == 10012
    PUBG-TCP2: network == 'tcp' and dst_port == 17500
    PUBG-UDP1: network == 'udp' and dst_port == 10010
    PUBG-UDP2: network == 'udp' and dst_port == 10013
    PUBG-UDP3: network == 'udp' and dst_port == 10039
    PUBG-UDP4: network == 'udp' and dst_port == 10096
    PUBG-UDP5: network == 'udp' and dst_port == 10491
    PUBG-UDP6: network == 'udp' and dst_port == 10612
    PUBG-UDP7: network == 'udp' and dst_port == 11455
    PUBG-UDP8: network == 'udp' and dst_port == 12235
    PUBG-UDP9: network == 'udp' and dst_port == 13748
    PUBG-UDP10: network == 'udp' and dst_port == 13894
    PUBG-UDP11: network == 'udp' and dst_port == 13972
    PUBG-UDP12: network == 'udp' and dst_port == 20000
    PUBG-UDP13: network == 'udp' and dst_port == 20001
    PUBG-UDP14: network == 'udp' and dst_port == 20002
    COD-TCP1: network == 'tcp' and dst_port == 3013
    COD-TCP2: network == 'tcp' and dst_port == 18082
    COD-TCP3: network == 'tcp' and dst_port == 65010
    COD-TCP4: network == 'tcp' and dst_port == 65050
  code: |
    def main(ctx, metadata):
        directkeywordlist = ["whatsapp"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use CHAT' % directkeyword)
            return "WHATSAPP"
        directkeywordlist = ["line"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use CHAT' % directkeyword)
            return "WHATSAPP"
        directkeywordlist = ["tiktok"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use SOSMED' % directkeyword)
            return "SOSMED"

        directkeywordlist = ["heytapmobi"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["aihelp"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["ml"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["mobilelegends"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["youngjoygame"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-MOBILELEGENDS' % directkeyword)
            return "PORT-MOBILELEGENDS"
        directkeywordlist = ["byteoversea"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["iframe"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["garena"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-GARENA' % directkeyword)
            return "PORT-GARENA"
        directkeywordlist = ["garenanow"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-GARENA' % directkeyword)
            return "PORT-GARENA"
        directkeywordlist = ["pubg"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["pubgmobile"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["tencent"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["proxemabeta"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use PORT-PUBG' % directkeyword)
            return "PORT-PUBG"
        directkeywordlist = ["akamaihd"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["akamaized"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["yuanzapp"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["taobao"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["anticheatexpert"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["qq"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["shellfire"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"
        directkeywordlist = ["ragnarok"]
        for directkeyword in directkeywordlist:
          if directkeyword in metadata["host"]:
            ctx.log('[Script] matched keyword %s use GAME' % directkeyword)
            return "GAME"

        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        if metadata["dst_ip"] == "164.52.73.249":
            return "WHATSAPP"

        if metadata["dst_ip"] == "157.240.208.60":
            return "WHATSAPP"

        if metadata["dst_ip"] == "116.203.234.121,213.174.129.45":
            return "AMANKAN-ANAK"

        ruleset_action = {"Bypass-Whatsapp": "WHATSAPP",
            "Bypass-Sosmed": "SOSMED",
            "Bypass-Stream": "STREAM",
            "Bypass-Game": "GAME",
            "Safety-Child": "AMANKAN-ANAK",
            "Koneksi-Proxy": "SIMASTER-V1.3",
          }
        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]

        code = ctx.geoip(metadata["dst_ip"])
        if code == "ID":
            ctx.log('[Script] Geoip ID')
            return "SIMASTER-V1.3"

        ctx.log('[Script] SIMASTER-V1.3')
        return "SIMASTER-V1.3"
rules:
- SCRIPT,OBS-TCP1935,PORT-UMUM
- SCRIPT,OBS-TCP1936,PORT-UMUM
- SCRIPT,OBS-TCP2935,PORT-UMUM
- SCRIPT,OBS-TCP2396,PORT-UMUM
- SCRIPT,WA-PORT,WHATSAPP
- SCRIPT,TCP-5228,PORT-UMUM
- SCRIPT,TCP-8888,PORT-UMUM
- SCRIPT,UDP-21,PORT-UMUM
- SCRIPT,UDP-22,PORT-UMUM
- SCRIPT,UDP-23,PORT-UMUM
- SCRIPT,UDP-53,PORT-UMUM
- SCRIPT,UDP-80,PORT-UMUM
- SCRIPT,UDP-123,PORT-UMUM
- SCRIPT,UDP-443,PORT-UMUM
- SCRIPT,UDP-1443,PORT-UMUM
- SCRIPT,UDP-5353,PORT-UMUM
- SCRIPT,UDP-8080,PORT-UMUM
- SCRIPT,UDP-8081,PORT-UMUM
- SCRIPT,UDP-8888,PORT-UMUM
- SCRIPT,FF-TCP1,PORT-GARENA
- SCRIPT,FF-TCP2,PORT-GARENA
- SCRIPT,FF-TCP3,PORT-GARENA
- SCRIPT,FF-UDP1,PORT-GARENA
- SCRIPT,FF-UDP2,PORT-GARENA
- SCRIPT,FF-UDP3,PORT-GARENA
- SCRIPT,ML-TCP1,PORT-MOBILELEGENDS
- SCRIPT,ML-TCP2,PORT-MOBILELEGENDS
- SCRIPT,ML-TCP3,PORT-MOBILELEGENDS
- SCRIPT,PUBG-TCP1,PORT-PUBG
- SCRIPT,PUBG-TCP2,PORT-PUBG
- SCRIPT,PUBG-UDP1,PORT-PUBG
- SCRIPT,PUBG-UDP2,PORT-PUBG
- SCRIPT,PUBG-UDP3,PORT-PUBG
- SCRIPT,PUBG-UDP4,PORT-PUBG
- SCRIPT,PUBG-UDP5,PORT-PUBG
- SCRIPT,PUBG-UDP6,PORT-PUBG
- SCRIPT,PUBG-UDP7,PORT-PUBG
- SCRIPT,PUBG-UDP8,PORT-PUBG
- SCRIPT,PUBG-UDP9,PORT-PUBG
- SCRIPT,PUBG-UDP10,PORT-PUBG
- SCRIPT,PUBG-UDP11,PORT-PUBG
- SCRIPT,PUBG-UDP12,PORT-PUBG
- SCRIPT,PUBG-UDP13,PORT-PUBG
- SCRIPT,PUBG-UDP14,PORT-PUBG
- SCRIPT,COD-TCP1,PORT-CALLOFDUTY
- SCRIPT,COD-TCP2,PORT-CALLOFDUTY
- SCRIPT,COD-TCP3,PORT-CALLOFDUTY
- SCRIPT,COD-TCP4,PORT-CALLOFDUTY
- IP-CIDR,198.18.0.1/16,REJECT,no-resolve
- DST-PORT,989,AMANKAN-ANAK
- DST-PORT,10087,AMANKAN-ANAK
- IP-CIDR,198.18.0.1/16,AMANKAN-ANAK,no-resolve
- RULE-SET,Koneksi-Proxy,SIMASTER-V1.3
- RULE-SET,Bypass-Whatsapp,WHATSAPP
- RULE-SET,Bypass-Sosmed,SOSMED
- RULE-SET,Bypass-Stream,STREAM
- RULE-SET,Bypass-Game,GAME
- RULE-SET,Safety-Child,AMANKAN-ANAK
- GEOIP,ID,SIMASTER-V1.3
- MATCH,SIMASTER-V1.3
tun:
  enable: true
  stack: system
  auto-route: false
  auto-detect-interface: false
  dns-hijack:
  - tcp://any:53
profile:
  store-selected: true
  store-fake-ip: true
secret : ""
bind-address: "*"
